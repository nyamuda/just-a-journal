{
  "swagger": "2.0",
  "info": {
    "title": "Just a Journal",
    "swagger": "2.0",
    "description": "A public API to manage your blogs",
    "version": "1.0.0"
  },
  "host": "just-a-journal.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "oAuthGithub": {
      "type": "oauth2",
      "authorizationUrl": "just-a-journal.onrender.com/oauth/github",
      "flow": "implicit"
    },
    "apiKeyAuth": {
      "type": "apiKey",
      "name": "authorization",
      "in": "header",
      "description": "The token for authentication"
    }
  },
  "paths": {
    "/authors/login": {
      "post": {
        "tags": [
          "Authors"
        ],
        "summary": "Login an author",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "<p>If the login process is successful, an access token is returned.    You can use this token to access various endpoints of the API.    The token expires in 24 hours.</p>",
            "schema": {
              "$ref": "#/definitions/loginUser"
            }
          }
        ],
        "responses": {}
      }
    },
    "/authors/register": {
      "post": {
        "tags": [
          "Authors"
        ],
        "summary": "Register a new author",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "<p>If the registration process is successful, an access token is returned.    You can use this token to access various endpoints of the API.    The token expires in 24 hours.</p>",
            "schema": {
              "$ref": "#/definitions/registerUser"
            }
          }
        ],
        "responses": {}
      }
    },
    "/authors": {
      "get": {
        "tags": [
          "Authors"
        ],
        "summary": "Get a list of all the authors",
        "description": "<p><span style=\"color:red;\"><b>Note:</b></span> Only admins have the authority to do this.</p>",
        "parameters": [],
        "responses": {},
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/authors/{authorId}": {
      "get": {
        "tags": [
          "Authors"
        ],
        "summary": "Get an author by id",
        "description": "<p>Only admins or the correct user/author have the authority to do this.</p>",
        "parameters": [
          {
            "name": "authorId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Authors"
        ],
        "summary": "Update an existing author",
        "description": "<p>Only admins or the correct user/author have the authority to do this.</p>",
        "parameters": [
          {
            "name": "authorId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/updateUser"
            }
          }
        ],
        "responses": {},
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Authors"
        ],
        "summary": "Delete an existing author",
        "description": "<p>Only admins or the correct user/author have the authority to do this.</p>",
        "parameters": [
          {
            "name": "authorId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/posts": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get all the posts",
        "description": "<p>The GET request returns all the posts by various authors.</p>",
        "parameters": [],
        "responses": {},
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "Add a post",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "<p>To access this route, you must provide the access token. The logged in author/user id will be added to the post if the POST request is successful.</p>   <h3>Fields</h3>\n   <ul>   <li><p><b>title</b> &#187; A string : Required. The title of the post.</p></li>   <li><p><b>content</b> &#187; A string : Required. The content of the post.</p></li>   <li><p><b>tags</b> &#187; An array/list : Optional. All the tags related to the blog post.</p></li>   <li><p><b>summary</b> &#187; A string : Optional. A brief summary of the post.</p></li>   <li>   <p><b>status</b> &#187; A string : Optional. The status of the blog post.The status can either be <i>published</i> or <i>draft</i>. The default status is <i>published</i>.</p>   </li>   <li>   <p><b>category</b> &#187; A string : Optional. The category in which the post belongs. The default is <i>miscellaneous</i>. To see a list of all the available categories, make a GET request to <i>/categories</i>.</p>   </li>   </ul>",
            "schema": {
              "$ref": "#/definitions/addPost"
            }
          }
        ],
        "responses": {},
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/posts/findByTags": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Find blog posts by tags",
        "description": "<p>Tags to filter by. List all the tags separated by a comma, e.g. \"medicine,economics,history\".</p>",
        "parameters": [
          {
            "name": "tags",
            "in": "query",
            "description": "Tag value that need to be considered for filter",
            "required": true,
            "default": "medicine",
            "explode": "true",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {},
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/posts/findByStatus": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Find blog posts by status",
        "description": "<p>At the moment, there are only two available statuses: <i>draft</i> and <i>publish</i>.</p>",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Status value that need to be considered for filter",
            "required": true,
            "default": "publish",
            "explode": "true",
            "enum": [
              "publish",
              "draft"
            ],
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {},
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/posts/findByCategory": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Find blog posts by category",
        "description": "<p>To see a list of all the available categories, make a GET request to <i>/categories</i>.</p>",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "Category value that need to be considered for filter",
            "required": true,
            "default": "miscellaneous",
            "explode": "true",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {},
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/posts/{id}": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Find blog post by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "Posts"
        ],
        "summary": "Update an existing post",
        "description": "<p>You can only update posts you",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/updatePost"
            }
          }
        ],
        "responses": {},
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Posts"
        ],
        "summary": "Delete a blog post",
        "description": "<p>You can only delete posts you",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": []
      }
    },
    "/{postId}/comments": {
      "post": {
        "tags": [
          "Comments"
        ],
        "summary": "Add a comment to a post",
        "description": "<p>To access this route, you must provide the access token.</p>",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/addComment"
            }
          }
        ],
        "responses": {},
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/comments/{commentId}": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Get a comment by id",
        "description": "",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Comments"
        ],
        "summary": "Update an existing comment",
        "description": "<p>You can only update comments you",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/updateComment"
            }
          }
        ],
        "responses": {},
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Comments"
        ],
        "summary": "Delete a comment",
        "description": "<p>You can only delete comments you",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/tags": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Get all the tags",
        "description": "",
        "parameters": [],
        "responses": {},
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/tags/{tagId}": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Get a tag by id",
        "description": "",
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Tags"
        ],
        "summary": "Update an existing tag",
        "description": "",
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/updateTag"
            }
          }
        ],
        "responses": {},
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Tags"
        ],
        "summary": "Delete a tag",
        "description": "",
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get all the categories",
        "description": "",
        "parameters": [],
        "responses": {},
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Add a category",
        "description": "<p> Only admins have the authority to add a category.</p>",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/addCategory"
            }
          }
        ],
        "responses": {},
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/categories/{categoryId}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get a category by id",
        "description": "",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Categories"
        ],
        "summary": "Update an existing category",
        "description": "<p><span style=\"color:red\"><b>Note:</b></span> Only admins have the authority to update existing categories.</p>",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/updateCategory"
            }
          }
        ],
        "responses": {},
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "summary": "Delete a category",
        "description": "<p><span style=\"color:red\"><b>Note:</b></span> Only admins have the authority to delete a category.</p>",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "registerUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "your full name"
        },
        "email": {
          "type": "string",
          "example": "email@example.com"
        },
        "password": {
          "type": "string",
          "example": "helloworld"
        }
      },
      "required": [
        "name",
        "email",
        "password"
      ]
    },
    "updateUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "your full name"
        },
        "email": {
          "type": "string",
          "example": "email@example.com"
        }
      }
    },
    "addPost": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "example": "Title of the post"
        },
        "content": {
          "type": "string",
          "example": "The content of the post"
        },
        "tags": {
          "type": "array",
          "example": [
            "science",
            "medicine"
          ],
          "items": {
            "type": "string"
          }
        },
        "summary": {
          "type": "string",
          "example": ""
        },
        "status": {
          "type": "string",
          "example": ""
        },
        "category": {
          "type": "string",
          "example": ""
        }
      },
      "required": [
        "title",
        "content"
      ]
    },
    "updatePost": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "example": "Title of the post"
        },
        "content": {
          "type": "string",
          "example": "The content of the post"
        }
      }
    },
    "addComment": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "example": "The comment"
        }
      },
      "required": [
        "content"
      ]
    },
    "updateComment": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "example": "The comment"
        }
      },
      "required": [
        "content"
      ]
    },
    "addCategory": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Name of the category"
        }
      },
      "required": [
        "name"
      ]
    },
    "updateCategory": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Name of the category"
        }
      },
      "required": [
        "name"
      ]
    },
    "addTag": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Name of the category"
        }
      },
      "required": [
        "name"
      ]
    },
    "updateTag": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Name of the category"
        }
      },
      "required": [
        "name"
      ]
    },
    "loginUser": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "email@example.com"
        },
        "password": {
          "type": "string",
          "example": "helloworld"
        }
      },
      "required": [
        "email",
        "password"
      ]
    }
  }
}